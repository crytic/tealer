---
name: Lint Code Base

defaults:
  run:
    # To load bashrc
    shell: bash -ieo pipefail {0}

on:
  push:
    branches: [main, dev]
  pull_request:
  schedule:
    # run CI every day even if no PRs/merges occur
    - cron:  '0 12 * * *'

jobs:
  build:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install .
          mkdir -p .github/linters
          cp pyproject.toml .github/linters
          cp mypy.ini .github/linters
          pip install pytest
      - name: Pylint
        uses: github/super-linter/slim@v4.9.2
        if: always()
        env:
          # run linter on everything to catch preexisting problems
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Run only pylint
          VALIDATE_PYTHON: true
          VALIDATE_PYTHON_PYLINT: true
          PYTHON_PYLINT_CONFIG_FILE: pyproject.toml

      - name: Black
        uses: github/super-linter/slim@v4.9.2
        if: always()
        env:
          # run linter on everything to catch preexisting problems
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Run only black
          VALIDATE_PYTHON_BLACK: true
          PYTHON_BLACK_CONFIG_FILE: pyproject.toml

      - name: Mypy
        uses: github/super-linter/slim@v4.9.2
        if: always()
        env:
          # run linter on everything to catch preexisting problems
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Run only mypy
          VALIDATE_PYTHON_MYPY: true
          PYTHON_MYPY_CONFIG_FILE: mypy.ini

      - name: Lint everything else
        uses: github/super-linter/slim@v4.9.2
        if: always()
        env:
          # run linter on everything to catch preexisting problems
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Always false
          VALIDATE_PYTHON: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_ISORT: false
          # Always false
          VALIDATE_JSON: false
          VALIDATE_JAVASCRIPT_STANDARD: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_DOCKERFILE: false
          VALIDATE_DOCKERFILE_HADOLINT: false
          VALIDATE_EDITORCONFIG: false
          VALIDATE_JSCPD: false
          VALIDATE_PYTHON_MYPY: false
          SHELLCHECK_OPTS: "-e SC1090 -e SC2181 -e SC2103"
